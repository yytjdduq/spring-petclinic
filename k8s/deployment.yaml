apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-petclinic
  namespace: default
  labels:
    app: spring-petclinic
spec:
  replicas: 3  # 3개의 레플리카 설정
  selector:
    matchLabels:
      app: spring-petclinic
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0    # 배포 중 항상 모든 파드가 살아있게 함 (서비스 무중단)
      maxSurge: 1          # 새 파드는 1개씩 추가
  template:
    metadata:
      labels:
        app: spring-petclinic
    spec:
      containers:
      - name: spring-petclinic
        image: ksy99/spring-petclinic-prometheus:latest  # Docker Hub에 업로드된 이미지
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5    # 컨테이너 시작 후 5초 대기 후 첫 프로브 실행
          periodSeconds: 10         # 10초마다 프로브 실행
---
apiVersion: v1
kind: Service
metadata:
  name: spring-petclinic-service
  namespace: default
  labels:
    app: spring-petclinic
spec:
  type: LoadBalancer  # 외부 접근을 위한 LoadBalancer 설정
  selector:
    app: spring-petclinic
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    name: http
